
package org.uoa.eolus;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import net.java.dev.jaxb.array.StringArray;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.3-b02-
 * Generated source version: 2.0
 * 
 */
@WebService(name = "Eolus", targetNamespace = "http://eolus.uoa.org/")
@SOAPBinding(style = SOAPBinding.Style.RPC)
public interface Eolus {


    /**
     * 
     * @param vMname
     * @param templateName
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "VMtoTemplate")
    @WebResult(partName = "return")
    public boolean vMtoTemplate(
        @WebParam(name = "VMname", partName = "VMname")
        String vMname,
        @WebParam(name = "templateName", partName = "templateName")
        String templateName);

    /**
     * 
     * @param scriptName
     * @param scriptDescription
     * @param scriptContnet
     * @throws DirectoryException_Exception
     */
    @WebMethod
    public void addScript(
        @WebParam(name = "scriptName", partName = "scriptName")
        String scriptName,
        @WebParam(name = "scriptContnet", partName = "scriptContnet")
        String scriptContnet,
        @WebParam(name = "scriptDescription", partName = "scriptDescription")
        String scriptDescription)
        throws DirectoryException_Exception
    ;

    /**
     * 
     * @param username
     * @throws ReservedUserException_Exception
     * @throws DirectoryException_Exception
     */
    @WebMethod
    public void addUser(
        @WebParam(name = "username", partName = "username")
        String username)
        throws DirectoryException_Exception, ReservedUserException_Exception
    ;

    /**
     * 
     * @param userOwner
     * @param scriptName
     * @param scriptDescription
     * @param scriptContnet
     * @throws DirectoryException_Exception
     */
    @WebMethod
    public void adminAddScript(
        @WebParam(name = "userOwner", partName = "userOwner")
        String userOwner,
        @WebParam(name = "scriptName", partName = "scriptName")
        String scriptName,
        @WebParam(name = "scriptContnet", partName = "scriptContnet")
        String scriptContnet,
        @WebParam(name = "scriptDescription", partName = "scriptDescription")
        String scriptDescription)
        throws DirectoryException_Exception
    ;

    /**
     * 
     * @param userOwner
     * @param scriptName
     * @param vMname
     * @throws UnknownVMException_Exception
     * @throws InternalErrorException_Exception
     * @throws VMContactErrorException_Exception
     */
    @WebMethod
    public void adminApplyScript(
        @WebParam(name = "userOwner", partName = "userOwner")
        String userOwner,
        @WebParam(name = "scriptName", partName = "scriptName")
        String scriptName,
        @WebParam(name = "VMname", partName = "VMname")
        String vMname)
        throws InternalErrorException_Exception, UnknownVMException_Exception, VMContactErrorException_Exception
    ;

    /**
     * 
     * @param site
     * @param hostname
     * @throws InternalErrorException_Exception
     */
    @WebMethod
    public void adminAssignHostToSite(
        @WebParam(name = "hostname", partName = "hostname")
        String hostname,
        @WebParam(name = "site", partName = "site")
        String site)
        throws InternalErrorException_Exception
    ;

    /**
     * 
     * @param userOwner
     * @param vMname
     * @throws UnknownVMException_Exception
     * @throws InternalErrorException_Exception
     * @throws UnknownUserException_Exception
     */
    @WebMethod
    public void adminAssignVMtoUser(
        @WebParam(name = "userOwner", partName = "userOwner")
        String userOwner,
        @WebParam(name = "VMname", partName = "VMname")
        String vMname)
        throws InternalErrorException_Exception, UnknownUserException_Exception, UnknownVMException_Exception
    ;

    /**
     * 
     * @param vNetName
     * @param user
     * @throws UnknownVNException_Exception
     * @throws InternalErrorException_Exception
     * @throws UnknownUserException_Exception
     */
    @WebMethod
    public void adminAssignVNettoUser(
        @WebParam(name = "user", partName = "user")
        String user,
        @WebParam(name = "VNetName", partName = "VNetName")
        String vNetName)
        throws InternalErrorException_Exception, UnknownUserException_Exception, UnknownVNException_Exception
    ;

    /**
     * 
     * @param site
     * @throws InternalErrorException_Exception
     */
    @WebMethod
    public void adminCreateSite(
        @WebParam(name = "site", partName = "site")
        String site)
        throws InternalErrorException_Exception
    ;

    /**
     * 
     * @param networks
     * @param memSize
     * @param userOwner
     * @param vMtemplateName
     * @param vMname
     * @param hostname
     * @param cores
     * @throws IOException_Exception
     * @throws InternalErrorException_Exception
     * @throws TemplateNotReadyException_Exception
     * @throws VMExistsException_Exception
     * @throws UnknownTemplateException_Exception
     * @throws DirectoryException_Exception
     */
    @WebMethod
    public void adminCreateVM(
        @WebParam(name = "userOwner", partName = "userOwner")
        String userOwner,
        @WebParam(name = "VMtemplateName", partName = "VMtemplateName")
        String vMtemplateName,
        @WebParam(name = "VMname", partName = "VMname")
        String vMname,
        @WebParam(name = "hostname", partName = "hostname")
        String hostname,
        @WebParam(name = "cores", partName = "cores")
        int cores,
        @WebParam(name = "memSize", partName = "memSize")
        int memSize,
        @WebParam(name = "networks", partName = "networks")
        StringArray networks)
        throws DirectoryException_Exception, IOException_Exception, InternalErrorException_Exception, TemplateNotReadyException_Exception, UnknownTemplateException_Exception, VMExistsException_Exception
    ;

    /**
     * 
     * @param vNetSubnet
     * @param vNetName
     * @throws VNExistsException_Exception
     * @throws InternalErrorException_Exception
     */
    @WebMethod
    public void adminCreateVNet(
        @WebParam(name = "VNetName", partName = "VNetName")
        String vNetName,
        @WebParam(name = "VNetSubnet", partName = "VNetSubnet")
        int vNetSubnet)
        throws InternalErrorException_Exception, VNExistsException_Exception
    ;

    /**
     * 
     * @param site
     * @throws InternalErrorException_Exception
     */
    @WebMethod
    public void adminDeleteSite(
        @WebParam(name = "site", partName = "site")
        String site)
        throws InternalErrorException_Exception
    ;

    /**
     * 
     * @param cmd
     * @param vMname
     * @return
     *     returns net.java.dev.jaxb.array.StringArray
     * @throws UnknownVMException_Exception
     * @throws InternalErrorException_Exception
     * @throws VMContactErrorException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    public StringArray adminExecCMD(
        @WebParam(name = "cmd", partName = "cmd")
        String cmd,
        @WebParam(name = "VMname", partName = "VMname")
        String vMname)
        throws InternalErrorException_Exception, UnknownVMException_Exception, VMContactErrorException_Exception
    ;

    /**
     * 
     * @return
     *     returns net.java.dev.jaxb.array.StringArray
     * @throws InternalErrorException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    public StringArray adminGetAllVNetList()
        throws InternalErrorException_Exception
    ;

    /**
     * 
     * @param userOwner
     * @param scriptName
     * @return
     *     returns java.lang.String
     * @throws UnknownScriptException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    public String adminGetDescription(
        @WebParam(name = "userOwner", partName = "userOwner")
        String userOwner,
        @WebParam(name = "scriptName", partName = "scriptName")
        String scriptName)
        throws UnknownScriptException_Exception
    ;

    /**
     * 
     * @param site
     * @return
     *     returns net.java.dev.jaxb.array.StringArray
     * @throws InternalErrorException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    public StringArray adminGetHostsofSite(
        @WebParam(name = "site", partName = "site")
        String site)
        throws InternalErrorException_Exception
    ;

    /**
     * 
     * @param userOwner
     * @return
     *     returns net.java.dev.jaxb.array.StringArray
     */
    @WebMethod
    @WebResult(partName = "return")
    public StringArray adminGetScriptList(
        @WebParam(name = "userOwner", partName = "userOwner")
        String userOwner);

    /**
     * 
     * @param site
     * @return
     *     returns java.lang.String
     * @throws IOException_Exception
     * @throws InternalErrorException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    public String adminGetSiteInfo(
        @WebParam(name = "site", partName = "site")
        String site)
        throws IOException_Exception, InternalErrorException_Exception
    ;

    /**
     * 
     * @return
     *     returns net.java.dev.jaxb.array.StringArray
     * @throws InternalErrorException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    public StringArray adminGetSites()
        throws InternalErrorException_Exception
    ;

    /**
     * 
     * @return
     *     returns net.java.dev.jaxb.array.StringArray
     * @throws InternalErrorException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    public StringArray adminGetStrayVMlist()
        throws InternalErrorException_Exception
    ;

    /**
     * 
     * @param userOwner
     * @param templateName
     * @return
     *     returns java.lang.String
     * @throws MultipleTemplatesException_Exception
     * @throws UnknownTemplateException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    public String adminGetTemplateStatus(
        @WebParam(name = "userOwner", partName = "userOwner")
        String userOwner,
        @WebParam(name = "templateName", partName = "templateName")
        String templateName)
        throws MultipleTemplatesException_Exception, UnknownTemplateException_Exception
    ;

    /**
     * 
     * @param userOwner
     * @return
     *     returns net.java.dev.jaxb.array.StringArray
     */
    @WebMethod
    @WebResult(partName = "return")
    public StringArray adminGetTemplates(
        @WebParam(name = "userOwner", partName = "userOwner")
        String userOwner);

    /**
     * 
     * @param userOwner
     * @return
     *     returns net.java.dev.jaxb.array.StringArray
     * @throws InternalErrorException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    public StringArray adminGetUserVMlist(
        @WebParam(name = "userOwner", partName = "userOwner")
        String userOwner)
        throws InternalErrorException_Exception
    ;

    /**
     * 
     * @param vMname
     * @return
     *     returns java.lang.String
     * @throws UnknownVMException_Exception
     * @throws InternalErrorException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    public String adminGetVMIP(
        @WebParam(name = "VMname", partName = "VMname")
        String vMname)
        throws InternalErrorException_Exception, UnknownVMException_Exception
    ;

    /**
     * 
     * @param vMname
     * @return
     *     returns java.lang.String
     * @throws UnknownVMException_Exception
     * @throws InternalErrorException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    public String adminGetVMInfo(
        @WebParam(name = "VMname", partName = "VMname")
        String vMname)
        throws InternalErrorException_Exception, UnknownVMException_Exception
    ;

    /**
     * 
     * @param vMname
     * @return
     *     returns java.lang.String
     * @throws UnknownVMException_Exception
     * @throws InternalErrorException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    public String adminGetVMStatus(
        @WebParam(name = "VMname", partName = "VMname")
        String vMname)
        throws InternalErrorException_Exception, UnknownVMException_Exception
    ;

    /**
     * 
     * @return
     *     returns net.java.dev.jaxb.array.StringArray
     * @throws InternalErrorException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    public StringArray adminGetVMlist()
        throws InternalErrorException_Exception
    ;

    /**
     * 
     * @param vNetName
     * @return
     *     returns java.lang.String
     * @throws UnknownVNException_Exception
     * @throws InternalErrorException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    public String adminGetVNetInfo(
        @WebParam(name = "VNetName", partName = "VNetName")
        String vNetName)
        throws InternalErrorException_Exception, UnknownVNException_Exception
    ;

    /**
     * 
     * @param user
     * @return
     *     returns net.java.dev.jaxb.array.StringArray
     * @throws InternalErrorException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    public StringArray adminGetVNetList(
        @WebParam(name = "user", partName = "user")
        String user)
        throws InternalErrorException_Exception
    ;

    /**
     * 
     * @param hostname
     * @throws InternalErrorException_Exception
     */
    @WebMethod
    public void adminMoveHostToDefaultSite(
        @WebParam(name = "hostname", partName = "hostname")
        String hostname)
        throws InternalErrorException_Exception
    ;

    /**
     * 
     * @param templateName
     * @throws MultipleTemplatesException_Exception
     * @throws TemplateNotReadyException_Exception
     * @throws DirectoryException_Exception
     */
    @WebMethod
    public void adminRemovePublicTemplate(
        @WebParam(name = "templateName", partName = "templateName")
        String templateName)
        throws DirectoryException_Exception, MultipleTemplatesException_Exception, TemplateNotReadyException_Exception
    ;

    /**
     * 
     * @param userOwner
     * @param scriptName
     * @throws UnknownScriptException_Exception
     * @throws DirectoryException_Exception
     */
    @WebMethod
    public void adminRemoveScript(
        @WebParam(name = "userOwner", partName = "userOwner")
        String userOwner,
        @WebParam(name = "scriptName", partName = "scriptName")
        String scriptName)
        throws DirectoryException_Exception, UnknownScriptException_Exception
    ;

    /**
     * 
     * @param userOwner
     * @param templateName
     * @throws MultipleTemplatesException_Exception
     * @throws TemplateNotReadyException_Exception
     * @throws DirectoryException_Exception
     */
    @WebMethod
    public void adminRemoveTemplate(
        @WebParam(name = "userOwner", partName = "userOwner")
        String userOwner,
        @WebParam(name = "templateName", partName = "templateName")
        String templateName)
        throws DirectoryException_Exception, MultipleTemplatesException_Exception, TemplateNotReadyException_Exception
    ;

    /**
     * 
     * @param vNetName
     * @throws UnknownVNException_Exception
     * @throws InternalErrorException_Exception
     */
    @WebMethod
    public void adminRemoveVNet(
        @WebParam(name = "VNetName", partName = "VNetName")
        String vNetName)
        throws InternalErrorException_Exception, UnknownVNException_Exception
    ;

    /**
     * 
     * @param vMname
     * @throws UnknownVMException_Exception
     * @throws InternalErrorException_Exception
     */
    @WebMethod
    public void adminResumeVM(
        @WebParam(name = "VMname", partName = "VMname")
        String vMname)
        throws InternalErrorException_Exception, UnknownVMException_Exception
    ;

    /**
     * 
     * @param vMname
     * @param forceShutdown
     * @throws UnknownVMException_Exception
     * @throws InternalErrorException_Exception
     */
    @WebMethod
    public void adminShutdownVM(
        @WebParam(name = "VMname", partName = "VMname")
        String vMname,
        @WebParam(name = "forceShutdown", partName = "forceShutdown")
        boolean forceShutdown)
        throws InternalErrorException_Exception, UnknownVMException_Exception
    ;

    /**
     * 
     * @param vMname
     * @throws UnknownVMException_Exception
     * @throws InternalErrorException_Exception
     */
    @WebMethod
    public void adminSuspendVM(
        @WebParam(name = "VMname", partName = "VMname")
        String vMname)
        throws InternalErrorException_Exception, UnknownVMException_Exception
    ;

    /**
     * 
     * @param user
     * @throws UnknownUserException_Exception
     */
    @WebMethod
    public void adminSyncUserScripts(
        @WebParam(name = "user", partName = "user")
        String user)
        throws UnknownUserException_Exception
    ;

    /**
     * 
     * @param user
     * @throws UnknownUserException_Exception
     */
    @WebMethod
    public void adminSyncUserTemplates(
        @WebParam(name = "user", partName = "user")
        String user)
        throws UnknownUserException_Exception
    ;

    /**
     * 
     * @param userOwner
     * @param move
     * @param newUser
     * @param templateName
     * @throws InternalErrorException_Exception
     */
    @WebMethod
    public void adminTransferTemplate(
        @WebParam(name = "userOwner", partName = "userOwner")
        String userOwner,
        @WebParam(name = "templateName", partName = "templateName")
        String templateName,
        @WebParam(name = "newUser", partName = "newUser")
        String newUser,
        @WebParam(name = "move", partName = "move")
        boolean move)
        throws InternalErrorException_Exception
    ;

    /**
     * 
     * @param site
     * @param value
     * @param property
     * @throws IOException_Exception
     * @throws InternalErrorException_Exception
     */
    @WebMethod
    public void adminUpdateSite(
        @WebParam(name = "site", partName = "site")
        String site,
        @WebParam(name = "property", partName = "property")
        String property,
        @WebParam(name = "value", partName = "value")
        String value)
        throws IOException_Exception, InternalErrorException_Exception
    ;

    /**
     * 
     * @param userOwner
     * @param vMname
     * @param templateName
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(partName = "return")
    public boolean adminVMtoTemplate(
        @WebParam(name = "userOwner", partName = "userOwner")
        String userOwner,
        @WebParam(name = "VMname", partName = "VMname")
        String vMname,
        @WebParam(name = "templateName", partName = "templateName")
        String templateName);

    /**
     * 
     * @param scriptName
     * @param vMname
     * @throws UnknownVMException_Exception
     * @throws InternalErrorException_Exception
     * @throws VMContactErrorException_Exception
     * @throws UnknownUserException_Exception
     */
    @WebMethod
    public void applyScript(
        @WebParam(name = "scriptName", partName = "scriptName")
        String scriptName,
        @WebParam(name = "VMname", partName = "VMname")
        String vMname)
        throws InternalErrorException_Exception, UnknownUserException_Exception, UnknownVMException_Exception, VMContactErrorException_Exception
    ;

    /**
     * 
     * @param hostname
     * @throws IOException_Exception
     * @throws InternalErrorException_Exception
     */
    @WebMethod
    public void createHost(
        @WebParam(name = "hostname", partName = "hostname")
        String hostname)
        throws IOException_Exception, InternalErrorException_Exception
    ;

    /**
     * 
     * @param networks
     * @param memSize
     * @param vMtemplateName
     * @param vMname
     * @param cores
     * @throws IOException_Exception
     * @throws TemplateNotReadyException_Exception
     * @throws InternalErrorException_Exception
     * @throws VMExistsException_Exception
     * @throws UnknownTemplateException_Exception
     * @throws DirectoryException_Exception
     */
    @WebMethod
    public void createVM(
        @WebParam(name = "VMtemplateName", partName = "VMtemplateName")
        String vMtemplateName,
        @WebParam(name = "VMname", partName = "VMname")
        String vMname,
        @WebParam(name = "cores", partName = "cores")
        int cores,
        @WebParam(name = "memSize", partName = "memSize")
        int memSize,
        @WebParam(name = "networks", partName = "networks")
        StringArray networks)
        throws DirectoryException_Exception, IOException_Exception, InternalErrorException_Exception, TemplateNotReadyException_Exception, UnknownTemplateException_Exception, VMExistsException_Exception
    ;

    /**
     * 
     * @param vNetSubnet
     * @param vNetName
     * @throws VNExistsException_Exception
     * @throws InternalErrorException_Exception
     */
    @WebMethod
    public void createVNet(
        @WebParam(name = "VNetName", partName = "VNetName")
        String vNetName,
        @WebParam(name = "VNetSubnet", partName = "VNetSubnet")
        int vNetSubnet)
        throws InternalErrorException_Exception, VNExistsException_Exception
    ;

    /**
     * 
     * @param hostname
     * @throws InternalErrorException_Exception
     */
    @WebMethod
    public void deleteHost(
        @WebParam(name = "hostname", partName = "hostname")
        String hostname)
        throws InternalErrorException_Exception
    ;

    /**
     * 
     * @param username
     * @throws ReservedUserException_Exception
     * @throws UnknownUserException_Exception
     * @throws DirectoryException_Exception
     */
    @WebMethod
    public void deleteUser(
        @WebParam(name = "username", partName = "username")
        String username)
        throws DirectoryException_Exception, ReservedUserException_Exception, UnknownUserException_Exception
    ;

    /**
     * 
     * @param enable
     * @param hostname
     * @throws InternalErrorException_Exception
     */
    @WebMethod
    public void enableHost(
        @WebParam(name = "hostname", partName = "hostname")
        String hostname,
        @WebParam(name = "enable", partName = "enable")
        boolean enable)
        throws InternalErrorException_Exception
    ;

    /**
     * 
     * @param cmd
     * @param vMname
     * @return
     *     returns net.java.dev.jaxb.array.StringArray
     * @throws UnknownVMException_Exception
     * @throws InternalErrorException_Exception
     * @throws VMContactErrorException_Exception
     * @throws UnknownUserException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    public StringArray execCMD(
        @WebParam(name = "cmd", partName = "cmd")
        String cmd,
        @WebParam(name = "VMname", partName = "VMname")
        String vMname)
        throws InternalErrorException_Exception, UnknownUserException_Exception, UnknownVMException_Exception, VMContactErrorException_Exception
    ;

    /**
     * 
     * @param key
     * @return
     *     returns java.lang.String
     * @throws UnknownParameter_Exception
     * @throws InternalErrorException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    public String getConfigurationParameter(
        @WebParam(name = "key", partName = "key")
        String key)
        throws InternalErrorException_Exception, UnknownParameter_Exception
    ;

    /**
     * 
     * @param scriptName
     * @return
     *     returns java.lang.String
     * @throws UnknownScriptException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    public String getDescription(
        @WebParam(name = "scriptName", partName = "scriptName")
        String scriptName)
        throws UnknownScriptException_Exception
    ;

    /**
     * 
     * @param hostname
     * @return
     *     returns java.lang.String
     * @throws InternalErrorException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    public String getHostInfo(
        @WebParam(name = "hostname", partName = "hostname")
        String hostname)
        throws InternalErrorException_Exception
    ;

    /**
     * 
     * @return
     *     returns net.java.dev.jaxb.array.StringArray
     * @throws InternalErrorException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    public StringArray getHostList()
        throws InternalErrorException_Exception
    ;

    /**
     * 
     * @return
     *     returns net.java.dev.jaxb.array.StringArray
     */
    @WebMethod
    @WebResult(partName = "return")
    public StringArray getPublicTemplates();

    /**
     * 
     * @return
     *     returns net.java.dev.jaxb.array.StringArray
     */
    @WebMethod
    @WebResult(partName = "return")
    public StringArray getScriptList();

    /**
     * 
     * @param templateName
     * @return
     *     returns java.lang.String
     * @throws MultipleTemplatesException_Exception
     * @throws UnknownTemplateException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    public String getTemplateStatus(
        @WebParam(name = "templateName", partName = "templateName")
        String templateName)
        throws MultipleTemplatesException_Exception, UnknownTemplateException_Exception
    ;

    /**
     * 
     * @return
     *     returns net.java.dev.jaxb.array.StringArray
     */
    @WebMethod
    @WebResult(partName = "return")
    public StringArray getTemplates();

    /**
     * 
     * @return
     *     returns net.java.dev.jaxb.array.StringArray
     */
    @WebMethod
    @WebResult(partName = "return")
    public StringArray getUsers();

    /**
     * 
     * @param vMname
     * @return
     *     returns java.lang.String
     * @throws UnknownVMException_Exception
     * @throws InternalErrorException_Exception
     * @throws UnknownUserException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    public String getVMIP(
        @WebParam(name = "VMname", partName = "VMname")
        String vMname)
        throws InternalErrorException_Exception, UnknownUserException_Exception, UnknownVMException_Exception
    ;

    /**
     * 
     * @param vMname
     * @return
     *     returns java.lang.String
     * @throws UnknownVMException_Exception
     * @throws InternalErrorException_Exception
     * @throws UnknownUserException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    public String getVMInfo(
        @WebParam(name = "VMname", partName = "VMname")
        String vMname)
        throws InternalErrorException_Exception, UnknownUserException_Exception, UnknownVMException_Exception
    ;

    /**
     * 
     * @param vMname
     * @return
     *     returns java.lang.String
     * @throws UnknownVMException_Exception
     * @throws InternalErrorException_Exception
     * @throws UnknownUserException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    public String getVMStatus(
        @WebParam(name = "VMname", partName = "VMname")
        String vMname)
        throws InternalErrorException_Exception, UnknownUserException_Exception, UnknownVMException_Exception
    ;

    /**
     * 
     * @return
     *     returns net.java.dev.jaxb.array.StringArray
     * @throws InternalErrorException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    public StringArray getVMlist()
        throws InternalErrorException_Exception
    ;

    /**
     * 
     * @param vNetName
     * @return
     *     returns java.lang.String
     * @throws UnknownVNException_Exception
     * @throws InternalErrorException_Exception
     * @throws UnknownUserException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    public String getVNetInfo(
        @WebParam(name = "VNetName", partName = "VNetName")
        String vNetName)
        throws InternalErrorException_Exception, UnknownUserException_Exception, UnknownVNException_Exception
    ;

    /**
     * 
     * @return
     *     returns net.java.dev.jaxb.array.StringArray
     * @throws InternalErrorException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    public StringArray getVNetList()
        throws InternalErrorException_Exception
    ;

    /**
     * 
     * @param templatePublicName
     * @param templateName
     * @throws MultipleTemplatesException_Exception
     * @throws TemplateNotReadyException_Exception
     * @throws InternalErrorException_Exception
     * @throws UnknownTemplateException_Exception
     * @throws DirectoryException_Exception
     */
    @WebMethod
    public void makeTemplatePublic(
        @WebParam(name = "templateName", partName = "templateName")
        String templateName,
        @WebParam(name = "templatePublicName", partName = "templatePublicName")
        String templatePublicName)
        throws DirectoryException_Exception, InternalErrorException_Exception, MultipleTemplatesException_Exception, TemplateNotReadyException_Exception, UnknownTemplateException_Exception
    ;

    /**
     * 
     * @param hostname
     * @param vmName
     * @throws UnknownVMException_Exception
     * @throws InternalErrorException_Exception
     */
    @WebMethod
    public void migrateVM(
        @WebParam(name = "VMName", partName = "VMName")
        String vmName,
        @WebParam(name = "hostname", partName = "hostname")
        String hostname)
        throws InternalErrorException_Exception, UnknownVMException_Exception
    ;

    /**
     * 
     * @param scriptName
     * @throws UnknownScriptException_Exception
     * @throws DirectoryException_Exception
     */
    @WebMethod
    public void removeScript(
        @WebParam(name = "scriptName", partName = "scriptName")
        String scriptName)
        throws DirectoryException_Exception, UnknownScriptException_Exception
    ;

    /**
     * 
     * @param templateName
     * @throws MultipleTemplatesException_Exception
     * @throws TemplateNotReadyException_Exception
     * @throws DirectoryException_Exception
     */
    @WebMethod
    public void removeTemplate(
        @WebParam(name = "templateName", partName = "templateName")
        String templateName)
        throws DirectoryException_Exception, MultipleTemplatesException_Exception, TemplateNotReadyException_Exception
    ;

    /**
     * 
     * @param vNetName
     * @throws UnknownVNException_Exception
     * @throws InternalErrorException_Exception
     * @throws UnknownUserException_Exception
     */
    @WebMethod
    public void removeVNet(
        @WebParam(name = "VNetName", partName = "VNetName")
        String vNetName)
        throws InternalErrorException_Exception, UnknownUserException_Exception, UnknownVNException_Exception
    ;

    /**
     * 
     * @param vMname
     * @throws UnknownVMException_Exception
     * @throws InternalErrorException_Exception
     * @throws UnknownUserException_Exception
     */
    @WebMethod
    public void resumeVM(
        @WebParam(name = "VMname", partName = "VMname")
        String vMname)
        throws InternalErrorException_Exception, UnknownUserException_Exception, UnknownVMException_Exception
    ;

    /**
     * 
     * @param value
     * @param key
     * @throws UnknownParameter_Exception
     * @throws InternalErrorException_Exception
     */
    @WebMethod
    public void setConfigurationParameter(
        @WebParam(name = "key", partName = "key")
        String key,
        @WebParam(name = "value", partName = "value")
        String value)
        throws InternalErrorException_Exception, UnknownParameter_Exception
    ;

    /**
     * 
     * @param vMname
     * @param forceShutdown
     * @throws UnknownVMException_Exception
     * @throws InternalErrorException_Exception
     * @throws UnknownUserException_Exception
     */
    @WebMethod
    public void shutdownVM(
        @WebParam(name = "VMname", partName = "VMname")
        String vMname,
        @WebParam(name = "forceShutdown", partName = "forceShutdown")
        boolean forceShutdown)
        throws InternalErrorException_Exception, UnknownUserException_Exception, UnknownVMException_Exception
    ;

    /**
     * 
     * @param vMname
     * @throws UnknownVMException_Exception
     * @throws InternalErrorException_Exception
     * @throws UnknownUserException_Exception
     */
    @WebMethod
    public void suspendVM(
        @WebParam(name = "VMname", partName = "VMname")
        String vMname)
        throws InternalErrorException_Exception, UnknownUserException_Exception, UnknownVMException_Exception
    ;

    /**
     * 
     * @throws UnknownUserException_Exception
     */
    @WebMethod
    public void syncScripts()
        throws UnknownUserException_Exception
    ;

    /**
     * 
     * @throws UnknownUserException_Exception
     */
    @WebMethod
    public void syncTemplates()
        throws UnknownUserException_Exception
    ;

    /**
     * 
     * @param newUserOwner
     * @param move
     * @param templateName
     * @throws InternalErrorException_Exception
     */
    @WebMethod
    public void transferTemplate(
        @WebParam(name = "templateName", partName = "templateName")
        String templateName,
        @WebParam(name = "newUserOwner", partName = "newUserOwner")
        String newUserOwner,
        @WebParam(name = "move", partName = "move")
        boolean move)
        throws InternalErrorException_Exception
    ;

}
